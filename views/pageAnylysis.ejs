<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <title>热点分析</title>
    <style>
        html,
        body,
        #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }

        #sidebar {
            z-index: 99;
            position: absolute;
            top: 0;
            right: 0;
            height: 97%;
            background: rgba(61, 59, 60, 0.75);
            width: 320px;
            font-family: "Avenir Next W00", "Helvetica Neue", Helvetica, Arial, sans-serif;
            overflow-y: auto;
        }

        .label {
            color: white;
        }

        #legendDiv {
            padding-top: 20px;
            padding-left: 20px;
            color: white;
            background-color: transparent;
            box-shadow: none;
        }

        #legendDiv_msg {
            display: none;
        }

        #hotspotButton {
            font-family: "Avenir Next W00", "Helvetica Neue", Helvetica, Arial, sans-serif;
            border: none;
            background-color: rgba(229, 89, 52, 0.75);
            color: #FFF;
            margin: 1px;
            width: 50%;
            padding: 10px;
            overflow: auto;
            text-align: center;
            cursor: pointer;
            font-size: 0.7em;
        }

        .tundra .dijitPopup {
            background-color: white;
        }

        #featcode {
            margin: 10px;
            width: 153px;
            background: none;
            border: none;
            border-bottom: 1px solid white;
            color: white;
            text-align: center;
            outline: none;
            height: 25px;
        }
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.3/esri/themes/dark/main.css">
    <link rel="stylesheet" href="https://js.arcgis.com/4.3/dijit/themes/tundra/tundra.css">
    <script src="https://js.arcgis.com/4.3/"></script>

    <script>
      require([
          "esri/Map",
          "esri/views/MapView",
          "esri/tasks/Geoprocessor",
          "esri/widgets/Legend",
          "esri/widgets/Spinner",
          "esri/layers/support/ImageParameters",

          "dijit/form/DateTextBox",
          "dojo/dom",
          "dojo/dom-construct",
          "dojo/on",
          "dojo/date/locale",
          "dojo/parser",
          "dijit/registry",
          "dojo/domReady!"
        ],
        function(Map, MapView, Geoprocessor, Legend, Spinner, ImageParameters,
                 DateTextBox, dom, domConstruct, on, locale, parser, registry) {

          parser.parse();

          on(dom.byId("hotspotButton"), "click", findHotspot);

          var map = new Map({
            basemap: "dark-gray-vector"
          });

          var view = new MapView({
            container: "viewDiv",
            map: map,
            center: [121, 31],
            zoom: 12
          });

          // initialize geoprocessor task
          var gpUrl =
            "https://10.60.42.201:6443/arcgis/rest/services/HotModel/GPServer/HotModel";

          var gp = new Geoprocessor(gpUrl);
          gp.outSpatialReference = { // autocasts as new SpatialReference()
            wkid: 102100
          };

          // initialize a legend widget for the geoprocessing service result
          var legend = new Legend({
            view: view
          }, "legendDiv");

          // create and show spinner while the geoprocessing service is
          // running
          spinner = new Spinner({
            visible: true,
            viewModel: {
              view: view
            }
          });
          domConstruct.place(spinner.domNode, view.root);

          function findHotspot() {
            var params = {
              Query: buildDefinitionQuery()
            };

            // clean up previous results
            cleanup();

            spinner.viewModel.point = view.center;
            gp.submitJob(params).then(drawResultData, errBack, progTest);
          }

          function buildDefinitionQuery() {
            console.log(document.getElementById('featcode').value)
            var defQuery = "(FEATCODE = " + parseInt(document.getElementById('featcode').value, 10) + ")";
            return defQuery;
          }

          function cleanup() {
            // remove the geoprocessing result layer from the map
            map.layers.forEach(function(layer, i) {
              if (layer.title === "HotspotLayer") {
                map.layers.remove(layer);
              }
            });
          }

          function drawResultData(result) {
            // set imageParameters
            var imageParams = new ImageParameters({
              format: "png32",
              dpi: 300
            });

            // get the task result as a MapImageLayer
            var resultLayer = gp.getResultMapImageLayer(result.jobId, null, imageParams);
            resultLayer.opacity = 0.7;
            resultLayer.title = "HotspotLayer";

            // add the result layer to the map
            map.layers.add(resultLayer);

            // hide the spinner
            spinner.viewModel.point = null;
          }

          function progTest(value) {
            console.log(value.jobStatus);
          }

          function errBack(err) {
            console.log("gp error: ", err);
          }
        });
    </script>
</head>

<body class="tundra">
<div id="viewDiv">
    <div id="sidebar">
        <div id="text">
            <div id="info">

                <div align="center">
                    <input type="text" placeholder="..." id="featcode">
                    <br> <button id="hotspotButton">Search</button>
                </div>

                <div id="legendDiv"></div>
            </div>
        </div>
    </div>
</div>
</body>
</html>